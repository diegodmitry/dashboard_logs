version: '3.8'

services:
  # MongoDB
  mongo:
    image: mongo:7.0
    container_name: log-dashboard-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: log-dashboard
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - log-dashboard-network

  # MongoDB Express (opcional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: log-dashboard-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - log-dashboard-network

  # Backend API
  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: log-dashboard-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/log-dashboard
      - PORT=3000
      - LOG_LEVEL=info
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - log-dashboard-network
    volumes:
      - ../backend/logs_in:/app/logs_in

  # Frontend Web
  web:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: log-dashboard-web
    restart: unless-stopped
    ports:
      - "5173:80"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - log-dashboard-network

volumes:
  mongo_data:
    driver: local

networks:
  log-dashboard-network:
    driver: bridge
